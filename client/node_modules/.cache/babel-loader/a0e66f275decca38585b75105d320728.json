{"ast":null,"code":"// export function scraper () {\n//     fetch (\"https://api.github.com/repos/BrightNate1022/git_scrap\")\n//    .then (response => response.json())\n//    // .then (console.log (response))\n//    .then (data => console.log (data));\n// }\n// export const request = require('request');\n// const options = {\n//   url: 'https://api.github.com/repos/BrightNate1022/git_scrap/commits',\n//   headers: {\n//     'BrightNate1022': 'request'\n//   }\n// };\n//  async function callback(error, response, body) {\n//   if (!error && response.statusCode === 200) {\n//     const info = JSON.parse(body);\n//     console.log(info.stargazers_count + \" Stars\");\n//     console.log(info.forks_count + \" Forks\");\n//   }\n// }\n// request(options, callback);","map":{"version":3,"names":[],"sources":["C:/Users/Nate/Documents/Git Scraper/client/src/helpers/api/gitapi.js"],"sourcesContent":["// export function scraper () {\r\n//     fetch (\"https://api.github.com/repos/BrightNate1022/git_scrap\")\r\n//    .then (response => response.json())\r\n//    // .then (console.log (response))\r\n//    .then (data => console.log (data));\r\n// }\r\n\r\n// export const request = require('request');\r\n\r\n// const options = {\r\n//   url: 'https://api.github.com/repos/BrightNate1022/git_scrap/commits',\r\n//   headers: {\r\n//     'BrightNate1022': 'request'\r\n//   }\r\n// };\r\n\r\n//  async function callback(error, response, body) {\r\n//   if (!error && response.statusCode === 200) {\r\n//     const info = JSON.parse(body);\r\n//     console.log(info.stargazers_count + \" Stars\");\r\n//     console.log(info.forks_count + \" Forks\");\r\n//   }\r\n  \r\n// }\r\n// request(options, callback);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}