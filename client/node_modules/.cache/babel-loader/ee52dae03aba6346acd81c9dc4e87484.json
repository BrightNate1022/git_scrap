{"ast":null,"code":"// import { response } from \"express\" ;\nfunction scraper(api) {\n  fetch(\"https://api.github.com/repos/BrightNate1022/git_scrap \".concat(api, \" \"));\n\n  if (scraper.api === null) {\n    fetch(\"https://api.github.com/repos/BrightNate1022/git_scrap\");\n    console.log(response);\n  } else {\n    fetch(\"https://api.github.com/repos/BrightNate1022/git_scrap\".concat(scraper.api));\n    console.log(response);\n  }\n\n  (function (response) {\n    return response.json();\n  }); // .then (console.log (response))\n\n\n  (function (data) {\n    return console.log(data);\n  });\n}\n\nexport default scraper; //  const data = {};","map":{"version":3,"names":["scraper","api","fetch","console","log","response","json","data"],"sources":["C:/Users/Nate/Documents/Git Scraper/client/src/helpers/scraper.js"],"sourcesContent":["  \r\n// import { response } from \"express\" ;\r\n\r\n function scraper (api) {\r\n     fetch (`https://api.github.com/repos/BrightNate1022/git_scrap ${api} `)\r\n\r\n    if (scraper.api === null) {\r\n        fetch (\"https://api.github.com/repos/BrightNate1022/git_scrap\")\r\n        console.log(response)\r\n      } else {\r\n        fetch (`https://api.github.com/repos/BrightNate1022/git_scrap${scraper.api}`)\r\n        console.log (response)\r\n      }\r\n    \r\n    response => response.json()\r\n    // .then (console.log (response))\r\n    data => console.log (data);   \r\n }     \r\n\r\n\r\nexport default scraper \r\n//  const data = {};\r\n"],"mappings":"AACA;AAEC,SAASA,OAAT,CAAkBC,GAAlB,EAAuB;EACnBC,KAAK,iEAA2DD,GAA3D,OAAL;;EAED,IAAID,OAAO,CAACC,GAAR,KAAgB,IAApB,EAA0B;IACtBC,KAAK,CAAE,uDAAF,CAAL;IACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ;EACD,CAHH,MAGS;IACLH,KAAK,gEAA0DF,OAAO,CAACC,GAAlE,EAAL;IACAE,OAAO,CAACC,GAAR,CAAaC,QAAb;EACD;;EAEH,WAAAA,QAAQ;IAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;EAAA,CAAR,EAXoB,CAYpB;;;EACA,WAAAC,IAAI;IAAA,OAAIJ,OAAO,CAACC,GAAR,CAAaG,IAAb,CAAJ;EAAA,CAAJ;AACF;;AAGF,eAAeP,OAAf,C,CACA"},"metadata":{},"sourceType":"module"}