{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\src\\\\helpers\\\\CommitSc.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\"; // import { ReactDOM } from \"react\"\n// import CommitConstructor from \"./CommitConstructor\"\n// export const commit = []\n\nvar Commit = /*#__PURE__*/function (_React$Component) {\n  _inherits(Commit, _React$Component);\n\n  function Commit(props) {\n    var _this;\n\n    _classCallCheck(this, Commit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Commit).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Commit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://api.github.com/repos/BrightNate1022/git_scrap/commits\").then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          data: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 16\n          }\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 16\n          }\n        }, \"Loading...\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }\n        }, data.map(function (data) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: data.sha,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }\n          }, data.author, \" \", data.commmit);\n        }));\n      }\n    }\n  }]);\n\n  return Commit;\n}(React.Component);\n\nexport default Commit;","map":{"version":3,"names":["axios","React","Component","Commit","props","state","error","isLoaded","data","get","then","result","setState","items","message","map","sha","author","commmit"],"sources":["C:/Users/Nate/Documents/Git Scraper/client/src/helpers/CommitSc.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { Component } from \"react\"\r\n// import { ReactDOM } from \"react\"\r\n// import CommitConstructor from \"./CommitConstructor\"\r\n// export const commit = []\r\nclass Commit extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        data : []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n        axios.get(\"https://api.github.com/repos/BrightNate1022/git_scrap/commits\")\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              data: result\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <ul>\r\n            {data.map(data => (\r\n              <li key={data.sha}>\r\n                {data.author} {data.commmit}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n  }\r\nexport default Commit\r\n \r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;IACMC,M;;;EACF,gBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,4EAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,IADI;MAEXC,QAAQ,EAAE,KAFC;MAGXC,IAAI,EAAG;IAHI,CAAb;IAFiB;EAOlB;;;;wCAEmB;MAAA;;MAChBR,KAAK,CAACS,GAAN,CAAU,+DAAV,EACCC,IADD,CAEE,UAACC,MAAD,EAAY;QACV,MAAI,CAACC,QAAL,CAAc;UACZL,QAAQ,EAAE,IADE;UAEZC,IAAI,EAAEG;QAFM,CAAd;MAID,CAPH,EAQE;MACA;MACA;MACA,UAACL,KAAD,EAAW;QACT,MAAI,CAACM,QAAL,CAAc;UACZL,QAAQ,EAAE,IADE;UAEZD,KAAK,EAALA;QAFY,CAAd;MAID,CAhBH;IAkBH;;;6BAEQ;MAAA;;MAAA,kBAC4B,KAAKD,KADjC;MAAA,IACCC,KADD,eACCA,KADD;MAAA,IACQC,QADR,eACQA,QADR;MAAA,IACkBM,KADlB,eACkBA,KADlB;;MAEP,IAAIP,KAAJ,EAAW;QACT,oBAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,cAAaA,KAAK,CAACQ,OAAnB,CAAP;MACD,CAFD,MAEO,IAAI,CAACP,QAAL,EAAe;QACpB,oBAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAAP;MACD,CAFM,MAEA;QACL,oBACE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACGC,IAAI,CAACO,GAAL,CAAS,UAAAP,IAAI;UAAA,oBACZ;YAAI,GAAG,EAAEA,IAAI,CAACQ,GAAd;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACGR,IAAI,CAACS,MADR,OACiBT,IAAI,CAACU,OADtB,CADY;QAAA,CAAb,CADH,CADF;MASD;IACF;;;;EAhDgBjB,KAAK,CAACC,S;;AAkD3B,eAAeC,MAAf"},"metadata":{},"sourceType":"module"}