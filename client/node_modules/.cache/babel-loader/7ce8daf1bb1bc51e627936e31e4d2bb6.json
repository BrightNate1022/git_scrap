{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\src\\\\componets\\\\CommitSc.js\";\nimport axios from \"axios\"; // import {request} from \"../helpers/api/gitapi\";\n\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from 'react-bootstrap/Card'; // import { ReactDOM } from \"react\"\n// import CommitConstructor from \"./CommitConstructor\"\n// export const commit = []\n\nvar Commit = /*#__PURE__*/function (_Component) {\n  _inherits(Commit, _Component);\n\n  function Commit(props) {\n    var _this;\n\n    _classCallCheck(this, Commit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Commit).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Commit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://api.github.com/repos/BrightNate1022/git_scrap/commits\") // request()\n      .then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          data: result.data\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //  console.log(data)\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          data = _this$state.data;\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, error.message))));\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }\n        }, \"Loading...\");\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          return (\n            /*#__PURE__*/\n            // <>\n            React.createElement(Container, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Row, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(Col, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Card, {\n              ClassID: \"error\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }\n            }, data[i].commit.author.email)))) // </>\n\n          );\n        } // }\n        // return (\n        // console.log(data)\n        // );\n\n      }\n    }\n  }]);\n\n  return Commit;\n}(Component);\n\nexport default Commit;","map":{"version":3,"names":["axios","React","Component","Container","Col","Row","Card","Commit","props","state","error","isLoaded","data","get","then","result","setState","message","i","length","commit","author","email"],"sources":["C:/Users/Nate/Documents/Git Scraper/client/src/componets/CommitSc.js"],"sourcesContent":["import axios from \"axios\"\r\n// import {request} from \"../helpers/api/gitapi\";\r\nimport React, { Component } from \"react\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Card from 'react-bootstrap/Card'\r\n// import { ReactDOM } from \"react\"\r\n// import CommitConstructor from \"./CommitConstructor\"\r\n// export const commit = []\r\nclass Commit extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        data : [],\r\n       \r\n      };\r\n    }\r\n      \r\n    componentDidMount() {\r\n        \r\n        axios.get(\"https://api.github.com/repos/BrightNate1022/git_scrap/commits\")\r\n        // request()\r\n        .then(  \r\n        \r\n              \r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              data: result.data ,\r\n             \r\n            });\r\n           \r\n          }, \r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n          \r\n        )\r\n        \r\n    }\r\n  \r\n    render() {\r\n    //  console.log(data)\r\n      const { error, isLoaded, data } = this.state;\r\n      if (error) {\r\n        return (\r\n          \r\n          <Container >\r\n            <Row >\r\n              <Col >\r\n              <Card className=\"error\">\r\n              {error.message}\r\n            </Card>\r\n            </Col>\r\n            </Row>\r\n          </Container>\r\n        \r\n        );\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        for (let i = 0 ; i < data.length; i++) {\r\n          \r\n        return (        \r\n          // <>\r\n              <Container >\r\n                <Row>\r\n                  <Col>\r\n                  <Card ClassID=\"error\">\r\n                {data[i].commit.author.email}\r\n                </Card>\r\n                </Col>\r\n                </Row>\r\n              </Container>\r\n            // </>\r\n          \r\n        )}\r\n        // }\r\n        // return (\r\n          // console.log(data)\r\n  \r\n        // );\r\n        \r\n      }\r\n    }\r\n  }\r\nexport default Commit\r\n \r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;AACA;AACA;;IACMC,M;;;EACF,gBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,4EAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,IADI;MAEXC,QAAQ,EAAE,KAFC;MAGXC,IAAI,EAAG;IAHI,CAAb;IAFiB;EAQlB;;;;wCAEmB;MAAA;;MAEhBZ,KAAK,CAACa,GAAN,CAAU,+DAAV,EACA;MADA,CAECC,IAFD,CAKE,UAACC,MAAD,EAAY;QACV,MAAI,CAACC,QAAL,CAAc;UACZL,QAAQ,EAAE,IADE;UAEZC,IAAI,EAAEG,MAAM,CAACH;QAFD,CAAd;MAMD,CAZH,EAaE;MACA;MACA;MACA,UAACF,KAAD,EAAW;QACT,MAAI,CAACM,QAAL,CAAc;UACZL,QAAQ,EAAE,IADE;UAEZD,KAAK,EAALA;QAFY,CAAd;MAID,CArBH;IAyBH;;;6BAEQ;MACT;MADS,kBAE2B,KAAKD,KAFhC;MAAA,IAECC,KAFD,eAECA,KAFD;MAAA,IAEQC,QAFR,eAEQA,QAFR;MAAA,IAEkBC,IAFlB,eAEkBA,IAFlB;;MAGP,IAAIF,KAAJ,EAAW;QACT,oBAEE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,IAAD;UAAM,SAAS,EAAC,OAAhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACCA,KAAK,CAACO,OADP,CADA,CADF,CADF,CAFF;MAaD,CAdD,MAcO,IAAI,CAACN,QAAL,EAAe;QACpB,oBAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAAP;MACD,CAFM,MAEA;QACL,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGN,IAAI,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;UAEvC;YAAA;YACE;YACI,oBAAC,SAAD;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,gBACE,oBAAC,GAAD;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,gBACE,oBAAC,GAAD;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,gBACA,oBAAC,IAAD;cAAM,OAAO,EAAC,OAAd;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,GACDN,IAAI,CAACM,CAAD,CAAJ,CAAQE,MAAR,CAAeC,MAAf,CAAsBC,KADrB,CADA,CADF,CADF,CAFN,CAWI;;UAXJ;QAaE,CAhBG,CAiBL;QACA;QACE;QAEF;;MAED;IACF;;;;EAnFgBpB,S;;AAqFrB,eAAeK,MAAf"},"metadata":{},"sourceType":"module"}