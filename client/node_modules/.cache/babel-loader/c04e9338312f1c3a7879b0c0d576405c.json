{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nate\\\\Documents\\\\Git Scraper\\\\client\\\\src\\\\componets\\\\CommitSc.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\"; // import { ReactDOM } from \"react\"\n// import CommitConstructor from \"./CommitConstructor\"\n// export const commit = []\n\nvar Commit = /*#__PURE__*/function (_Component) {\n  _inherits(Commit, _Component);\n\n  function Commit(props) {\n    var _this;\n\n    _classCallCheck(this, Commit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Commit).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Commit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://api.github.com/repos/BrightNate1022/git_scrap/commits\").then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          data: result.data\n        });\n\n        console.log(data);\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          data = _this$state.data;\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }\n        }, \"Loading...\");\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          return (\n            /*#__PURE__*/\n            // console.log(data)\n            React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 14\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 20\n              }\n            }, data[i].committer.date))\n          );\n        }\n      }\n    }\n  }]);\n\n  return Commit;\n}(Component);\n\nexport default Commit;","map":{"version":3,"names":["axios","React","Component","Commit","props","state","error","isLoaded","data","get","then","result","setState","console","log","message","i","length","committer","date"],"sources":["C:/Users/Nate/Documents/Git Scraper/client/src/componets/CommitSc.js"],"sourcesContent":["import axios from \"axios\"\r\nimport React, { Component } from \"react\"\r\n// import { ReactDOM } from \"react\"\r\n// import CommitConstructor from \"./CommitConstructor\"\r\n// export const commit = []\r\nclass Commit extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        data : [],\r\n       \r\n      };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n        axios.get(\"https://api.github.com/repos/BrightNate1022/git_scrap/commits\")\r\n\r\n        .then(  \r\n              \r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              data: result.data ,\r\n             \r\n            });\r\n            console.log(data)\r\n          }, \r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n          \r\n        )\r\n        \r\n    }\r\n  \r\n    render() {\r\n    \r\n      const { error, isLoaded, data } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        for (let i = 0 ; i < data.length; i++) {\r\n          return (\r\n          // console.log(data)\r\n          \r\n             <div>\r\n                 { <p>{data[i].committer.date}</p> }\r\n             </div>\r\n           \r\n        );\r\n        }\r\n       \r\n        \r\n      }\r\n    }\r\n  }\r\nexport default Commit\r\n \r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;IACMC,M;;;EACF,gBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,4EAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,IADI;MAEXC,QAAQ,EAAE,KAFC;MAGXC,IAAI,EAAG;IAHI,CAAb;IAFiB;EAQlB;;;;wCAEmB;MAAA;;MAEhBR,KAAK,CAACS,GAAN,CAAU,+DAAV,EAECC,IAFD,CAIE,UAACC,MAAD,EAAY;QACV,MAAI,CAACC,QAAL,CAAc;UACZL,QAAQ,EAAE,IADE;UAEZC,IAAI,EAAEG,MAAM,CAACH;QAFD,CAAd;;QAKAK,OAAO,CAACC,GAAR,CAAYN,IAAZ;MACD,CAXH,EAYE;MACA;MACA;MACA,UAACF,KAAD,EAAW;QACT,MAAI,CAACM,QAAL,CAAc;UACZL,QAAQ,EAAE,IADE;UAEZD,KAAK,EAALA;QAFY,CAAd;MAID,CApBH;IAwBH;;;6BAEQ;MAAA,kBAE2B,KAAKD,KAFhC;MAAA,IAECC,KAFD,eAECA,KAFD;MAAA,IAEQC,QAFR,eAEQA,QAFR;MAAA,IAEkBC,IAFlB,eAEkBA,IAFlB;;MAGP,IAAIF,KAAJ,EAAW;QACT,oBAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,cAAaA,KAAK,CAACS,OAAnB,CAAP;MACD,CAFD,MAEO,IAAI,CAACR,QAAL,EAAe;QACpB,oBAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAAP;MACD,CAFM,MAEA;QACL,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGR,IAAI,CAACS,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;UACrC;YAAA;YACA;YAEG;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,gBACM;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,GAAIR,IAAI,CAACQ,CAAD,CAAJ,CAAQE,SAAR,CAAkBC,IAAtB,CADN;UAHH;QAQD;MAGF;IACF;;;;EA5DgBjB,S;;AA8DrB,eAAeC,MAAf"},"metadata":{},"sourceType":"module"}